function Rackets.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 2
pop this 8
push constant 8
pop this 4
push constant 50
pop this 5
push this 4
push constant 2
call Math.divide 2
pop this 6
push this 5
push constant 2
call Math.divide 2
pop this 7
push constant 256
push constant 2
call Math.divide 2
pop this 0
push constant 256
push constant 2
call Math.divide 2
pop this 2
push constant 10
push this 4
push constant 2
call Math.divide 2
add
pop this 1
push constant 512
push constant 10
sub
push this 4
push constant 2
call Math.divide 2
sub
pop this 3
push this 7
pop this 9
push constant 255
push this 7
sub
push constant 1
sub
pop this 10
push pointer 0
return
function Rackets.get_right_surface_x 0
push argument 0
pop pointer 0
push this 3
push this 6
sub
return
function Rackets.get_left_surface_x 0
push argument 0
pop pointer 0
push this 1
push this 6
add
return
function Rackets.get_right_y 0
push argument 0
pop pointer 0
push this 2
return
function Rackets.get_right_top 0
push argument 0
pop pointer 0
push this 2
push this 7
sub
return
function Rackets.get_right_bot 0
push argument 0
pop pointer 0
push this 2
push this 7
add
return
function Rackets.get_left_y 0
push argument 0
pop pointer 0
push this 0
return
function Rackets.get_left_top 0
push argument 0
pop pointer 0
push this 0
push this 7
sub
return
function Rackets.get_left_bot 0
push argument 0
pop pointer 0
push this 0
push this 7
add
return
function Rackets.draw_left 0
push argument 0
pop pointer 0
push this 1
push this 6
sub
push this 0
push this 7
sub
push this 1
push this 6
add
push this 0
push this 7
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Rackets.draw_right 0
push argument 0
pop pointer 0
push this 3
push this 6
sub
push this 2
push this 7
sub
push this 3
push this 6
add
push this 2
push this 7
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Rackets.clear_left 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Rackets.draw_left 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Rackets.clear_right 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Rackets.draw_right 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Rackets.update 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Rackets.clear_right 1
pop temp 0
push this 9
push this 2
push this 8
sub
call Math.max 2
pop this 2
push pointer 0
call Rackets.draw_right 1
pop temp 0
label IF_FALSE0
push local 0
push constant 133
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Rackets.clear_right 1
pop temp 0
push this 10
push this 2
push this 8
add
call Math.min 2
pop this 2
push pointer 0
call Rackets.draw_right 1
pop temp 0
label IF_FALSE1
push local 0
push constant 87
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Rackets.clear_left 1
pop temp 0
push this 9
push this 0
push this 8
sub
call Math.max 2
pop this 0
push pointer 0
call Rackets.draw_left 1
pop temp 0
label IF_FALSE2
push local 0
push constant 83
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Rackets.clear_left 1
pop temp 0
push this 10
push this 0
push this 8
add
call Math.min 2
pop this 0
push pointer 0
call Rackets.draw_left 1
pop temp 0
label IF_FALSE3
push constant 0
return
